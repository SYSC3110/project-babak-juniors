<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_LcWtkLpxEeeQjPd4LJtRTw" name="BabakJuniors2">
    <eAnnotations xmi:id="_LizT0LpxEeeQjPd4LJtRTw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Li1wELpxEeeQjPd4LJtRTw" source="codegen">
        <details xmi:id="_Li1wEbpxEeeQjPd4LJtRTw" key="codegenDirectory" value="/BabakJuniors/src"/>
        <details xmi:id="_MaRuYLpxEeeQjPd4LJtRTw" key="AssociatedSourceCode" value="/BabakJuniors/src/Age.java;3437563253/1;/BabakJuniors/src/Coordinates.java;1350434298/1;/BabakJuniors/src/HouseAttributes.java;2303907086/1;/BabakJuniors/src/House.java;1474494083/1;/BabakJuniors/src/KNN.java;989706131/1;/BabakJuniors/src/SqrFt.java;3817456381/1;/BabakJuniors/src/TestRun.java;1517905015/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_L0SscLpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_L0SscbpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_L0TTgLpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_L0TTgbpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_L0TTgrpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_L0TTg7pxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_L0TThLpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_L0TThbpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_L0T6kLpxEeeQjPd4LJtRTw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_LzjFkLpxEeeQjPd4LJtRTw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_LzjsoLpxEeeQjPd4LJtRTw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_L2cokLpxEeeQjPd4LJtRTw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_L2edwLpxEeeQjPd4LJtRTw" name="List"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_L2zN4LpxEeeQjPd4LJtRTw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_L2zN4bpxEeeQjPd4LJtRTw" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L0Ml0LpxEeeQjPd4LJtRTw" name="Age">
      <ownedComment xmi:id="_L3ZDwLpxEeeQjPd4LJtRTw">
        <body>*Age
*
*@Authors: Ahmed Khattab
*@Purpose: Determine the age of a house given whether its old or new
*
*@field variables
*	ageValue: A String to hold the Age entered
*	Old: A String which holds the Age Old
*	New: A String which holds the Age New
*	
*@methods
*	getNormalizedValue
*</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L26ioLpxEeeQjPd4LJtRTw" name="ageValue" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L27wwLpxEeeQjPd4LJtRTw" name="Old" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_L27wwbpxEeeQjPd4LJtRTw" value="&quot;Old&quot;"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L28X0bpxEeeQjPd4LJtRTw" name="New" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_L28-4LpxEeeQjPd4LJtRTw" value="&quot;New&quot;"/>
      </ownedAttribute>
      <interfaceRealization xmi:id="_L2aMULpxEeeQjPd4LJtRTw" client="_L0Ml0LpxEeeQjPd4LJtRTw" supplier="_L0e5sLpxEeeQjPd4LJtRTw" contract="_L0e5sLpxEeeQjPd4LJtRTw"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3M2gLpxEeeQjPd4LJtRTw" name="Age" specification="_L0VvwLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3NdkLpxEeeQjPd4LJtRTw" name="ageValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3NdkbpxEeeQjPd4LJtRTw" type="_L0Ml0LpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>this.ageValue=ageValue;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3Qg4LpxEeeQjPd4LJtRTw" name="getNormalizedValue" specification="_L0YMALpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3Qg4bpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>if(Old.equals(ageValue)) {
			return (float) 0.5;
		}
		else if(New.equals(ageValue)) {
			return (float) 0.8;
		}
		else {
			return 0;	
		}
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L0VvwLpxEeeQjPd4LJtRTw" name="Age" method="_L3M2gLpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L0Xk8LpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L0Xk8bpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L0VvwbpxEeeQjPd4LJtRTw" name="ageValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L0Xk8rpxEeeQjPd4LJtRTw" type="_L0Ml0LpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L0YMALpxEeeQjPd4LJtRTw" name="getNormalizedValue" method="_L3Qg4LpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3ZDwbpxEeeQjPd4LJtRTw">
          <body>Method for Coordinates used to return the y coordinates
	 * @return y</body>
        </ownedComment>
        <ownedParameter xmi:id="_L0YzELpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L0aoQLpxEeeQjPd4LJtRTw" name="Coordinates">
      <ownedComment xmi:id="_L3ZDwrpxEeeQjPd4LJtRTw">
        <body>*Coordinates
*
*@Authors: Ahmed Khattab
*@Purpose: Determine the coordinates of a house given its x and y positions.
*
*@field variables
*	x: The x coordinate
*	y: The y coordinate
*	
*@methods
*	getY
*	getX
*	setY
*	setX
*</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L29l8LpxEeeQjPd4LJtRTw" name="x">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L29l8bpxEeeQjPd4LJtRTw" name="y">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3RH8LpxEeeQjPd4LJtRTw" name="Coordinates" specification="_L0b2YLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3RH8bpxEeeQjPd4LJtRTw" name="x">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3RH8rpxEeeQjPd4LJtRTw" name="y">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3RH87pxEeeQjPd4LJtRTw" type="_L0aoQLpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>this.x=x;
		this.y=y;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L0b2YLpxEeeQjPd4LJtRTw" name="Coordinates" method="_L3RH8LpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L0cdcLpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L0cdcbpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L0b2YbpxEeeQjPd4LJtRTw" name="x">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L0b2YrpxEeeQjPd4LJtRTw" name="y">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L0cdcrpxEeeQjPd4LJtRTw" type="_L0aoQLpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Interface" xmi:id="_L0e5sLpxEeeQjPd4LJtRTw" name="HouseAttributes">
      <ownedComment xmi:id="_L3ZDw7pxEeeQjPd4LJtRTw">
        <body>*House Attributes
*
*@Authors: Ahmed Khattab
*@Purpose: An interface for the method getNormalizedValue used in the following classes:
*1. SqrFt
*2. Age
*
*	
*@methods
*	getNormalizedValue
*</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L0fgwLpxEeeQjPd4LJtRTw" name="normalizedValue" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L0gH0LpxEeeQjPd4LJtRTw" name="House">
      <ownedComment xmi:id="_L3ZDxLpxEeeQjPd4LJtRTw">
        <body>*House&#xD;
*&#xD;
*@Authors: Hunho Ha&#xD;
*@Purpose: collecting all the Attributes(Coordinates, Age, SqrFt, and price) into arraylist and returning as House class.&#xD;
*&#xD;
*@field variables&#xD;
*	houseAttributes : ArrayList contains Coordinates, Age, SqrFt, and Price.&#xD;
*	Price: The price of the &#xD;
*	&#xD;
*@methods&#xD;
*	getPrice&#xD;
*	setPrice&#xD;
*	getHouse&#xD;
*	getCorx&#xD;
*	getCorY&#xD;
*	getAge&#xD;
*	getSqrFt</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L2-NALpxEeeQjPd4LJtRTw" name="houseAttributes" visibility="private" type="_L2zN4bpxEeeQjPd4LJtRTw" isOrdered="true" association="_L3dVMLpxEeeQjPd4LJtRTw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L2-NAbpxEeeQjPd4LJtRTw" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_L2-0ELpxEeeQjPd4LJtRTw" value="new ArrayList&lt;Object>()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L2_bILpxEeeQjPd4LJtRTw" name="price">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3RvALpxEeeQjPd4LJtRTw" name="House" specification="_L2hhELpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3RvAbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvArpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvA7pxEeeQjPd4LJtRTw" name="s" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvBLpxEeeQjPd4LJtRTw" name="p">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3RvBbpxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>/*&#xD;
		 * Constructor with price.&#xD;
		 * index 0 of Arraylist has coordinates&#xD;
		 * index 1, Age&#xD;
		 * index 2, sqrFt &#xD;
		 * index 3, price&#xD;
		 */&#xD;
		houseAttributes.add(0,c);&#xD;
		houseAttributes.add(1,a);&#xD;
		houseAttributes.add(2,s);&#xD;
		price = p;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3RvBrpxEeeQjPd4LJtRTw" name="House" specification="_L2ivMLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3RvB7pxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvCLpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvCbpxEeeQjPd4LJtRTw" name="s" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3RvCrpxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>//constructor for new house aka unknown price&#xD;
		/*&#xD;
		 * Constructor without price&#xD;
		 * and price will be 0&#xD;
		 */&#xD;
		houseAttributes.add(0,c);&#xD;
		houseAttributes.add(1,a);&#xD;
		houseAttributes.add(2,s);&#xD;
		price=0;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3SWELpxEeeQjPd4LJtRTw" name="House" specification="_L0jyMLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3SWEbpxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>/*&#xD;
		 * Construct without any information.&#xD;
		 * Just making a price 0 and empty arraylist of house.&#xD;
		 */&#xD;
		price=0;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3SWErpxEeeQjPd4LJtRTw" name="getHouse" specification="_L0kZQLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3SWE7pxEeeQjPd4LJtRTw" type="_L2zN4bpxEeeQjPd4LJtRTw" isOrdered="true" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L3SWFLpxEeeQjPd4LJtRTw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>return houseAttributes; &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3SWFbpxEeeQjPd4LJtRTw" name="getCorX" specification="_L0mOcLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3SWFrpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return ((Coordinates) houseAttributes.get(0)).getX();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3S9ILpxEeeQjPd4LJtRTw" name="getCorY" specification="_L0oDoLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3S9IbpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return ((Coordinates) houseAttributes.get(0)).getY();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3S9IrpxEeeQjPd4LJtRTw" name="getAge" specification="_L0oqsbpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3S9I7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return (((Age) houseAttributes.get(1)).getNormalizedValue());&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3S9JLpxEeeQjPd4LJtRTw" name="getSqrFt" specification="_L0pRwbpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3S9JbpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return (((SqrFt) houseAttributes.get(2)).getNormalizedValue());&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L0jyMLpxEeeQjPd4LJtRTw" name="House" method="_L3SWELpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L0jyMbpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L0jyMrpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L0jyM7pxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L0kZQLpxEeeQjPd4LJtRTw" name="getHouse" method="_L3SWErpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq0LpxEeeQjPd4LJtRTw">
          <body>getter for House.</body>
        </ownedComment>
        <ownedParameter xmi:id="_L0kZQbpxEeeQjPd4LJtRTw" type="_L2zN4bpxEeeQjPd4LJtRTw" isOrdered="true" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L0kZQrpxEeeQjPd4LJtRTw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L0mOcLpxEeeQjPd4LJtRTw" name="getCorX" method="_L3SWFbpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq0bpxEeeQjPd4LJtRTw">
          <body>getter for Attributes(Coordinates, Age, SqrFt)</body>
        </ownedComment>
        <ownedParameter xmi:id="_L0nckLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L0oDoLpxEeeQjPd4LJtRTw" name="getCorY" method="_L3S9ILpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L0oqsLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L0oqsbpxEeeQjPd4LJtRTw" name="getAge" method="_L3S9IrpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L0pRwLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L0pRwbpxEeeQjPd4LJtRTw" name="getSqrFt" method="_L3S9JLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L0pRwrpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2hhELpxEeeQjPd4LJtRTw" name="House" method="_L3RvALpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L2iIILpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L2iIIbpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L2hhEbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2hhErpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2hhE7pxEeeQjPd4LJtRTw" name="s" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2hhFLpxEeeQjPd4LJtRTw" name="p">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L2iIIrpxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L2ivMLpxEeeQjPd4LJtRTw" name="House" method="_L3RvBrpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L2jWQLpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L2jWQbpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L2ivMbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2ivMrpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2ivM7pxEeeQjPd4LJtRTw" name="s" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2jWQrpxEeeQjPd4LJtRTw" type="_L0gH0LpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L0uxULpxEeeQjPd4LJtRTw" name="KNN">
      <ownedComment xmi:id="_L3Zq0rpxEeeQjPd4LJtRTw">
        <body>*KNN&#xD;
*&#xD;
*@Authors: Jeff Tudor &#xD;
*@Purpose: Determine the price of a house given its house attributes compared to similar houses&#xD;
*&#xD;
*@field variables&#xD;
*	houses: A collection of houses with known attributes and price&#xD;
*	nearestNeighbors: A collection of houses used to determine the price of a certain house&#xD;
*	&#xD;
*@methods&#xD;
*	main:&#xD;
*	findKNN:&#xD;
*	findDistance:&#xD;
*	findPrice:&#xD;
*</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L3ACMLpxEeeQjPd4LJtRTw" name="houses" type="_L0gH0LpxEeeQjPd4LJtRTw" isOrdered="true" isReadOnly="true" association="_L3ejUbpxEeeQjPd4LJtRTw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L3ApQLpxEeeQjPd4LJtRTw" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L3CecbpxEeeQjPd4LJtRTw" name="nearestNeighbors" type="_L0gH0LpxEeeQjPd4LJtRTw" isOrdered="true" association="_L3fKYbpxEeeQjPd4LJtRTw">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L3CecrpxEeeQjPd4LJtRTw" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_L3DFgLpxEeeQjPd4LJtRTw" name="newHouse" type="_L0gH0LpxEeeQjPd4LJtRTw" isReadOnly="true" association="_L3gYgbpxEeeQjPd4LJtRTw"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3ULQLpxEeeQjPd4LJtRTw" name="KNN" specification="_L0v_cLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3ULQbpxEeeQjPd4LJtRTw" type="_L0uxULpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>houses = new ArrayList&lt;House>();&#xD;
		nearestNeighbors = new ArrayList&lt;House>();&#xD;
		newHouse = null;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3UyULpxEeeQjPd4LJtRTw" name="findKNN" specification="_L22RMLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3UyUbpxEeeQjPd4LJtRTw" name="k">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3UyUrpxEeeQjPd4LJtRTw" name="newHouse" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3UyU7pxEeeQjPd4LJtRTw" name="potentialNN" type="_L2cokLpxEeeQjPd4LJtRTw"/>
        <language>java</language>
        <body>House nearestNeighbor = new House(); &#xD;
		if(k>0){ //if K>0 then must find nearestNeighbor and append to list of NN&#xD;
			float distance = -1;&#xD;
			float smallestDistance=-1;&#xD;
			for(House h:potentialNN){&#xD;
				distance=findDistance(h, newHouse);&#xD;
				if (smallestDistance==-1){//first house in list will initially be NN&#xD;
					smallestDistance= distance;&#xD;
					nearestNeighbor=h;					&#xD;
				}	&#xD;
				if(smallestDistance > distance){//new smallest distance&#xD;
					smallestDistance=distance;&#xD;
					nearestNeighbor=h;&#xD;
				}&#xD;
			}&#xD;
			nearestNeighbors.add(nearestNeighbor);//append NN	&#xD;
			ArrayList&lt;House> newPotentialNN = new ArrayList&lt;House>();//smelllllllly&#xD;
			for (House h: potentialNN) {&#xD;
				newPotentialNN.add(h);&#xD;
			}&#xD;
			newPotentialNN.remove(nearestNeighbor);//remove the determined nearestNeighbor&#xD;
			findKNN(k-1, newHouse, newPotentialNN);//Recursively call until k neighbors have been determined&#xD;
		}&#xD;
		&#xD;
	//K nearest neighbors have been determined&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3UyVLpxEeeQjPd4LJtRTw" name="findPrice" specification="_L0xNkLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3UyVbpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>float sum=0;&#xD;
		int count=0;&#xD;
		for(House h:nearestNeighbors){&#xD;
			sum+=h.getPrice();&#xD;
			count++;&#xD;
		}&#xD;
		return (int)sum/count;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3UyVrpxEeeQjPd4LJtRTw" name="findDistance" specification="_L2oOwLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3UyV7pxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3UyWLpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3UyWbpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return findCoordinateDistance( h1,  h2)+findAgeDistance( h1,  h2)+findSqrFtDistance( h1,  h2);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3VZYLpxEeeQjPd4LJtRTw" name="findCoordinateDistance" specification="_L2o10LpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3VZYbpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3VZYrpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3VZY7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return  Math.abs((float)Math.sqrt(Math.pow(h1.getCorX()-h2.getCorX(), 2)+ Math.pow(h1.getCorY()-h2.getCorY(), 2)));&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3VZZLpxEeeQjPd4LJtRTw" name="findAgeDistance" specification="_L2pc4bpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3VZZbpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3VZZrpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3VZZ7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return Math.abs(h1.getAge() - h2.getAge());&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3WAcLpxEeeQjPd4LJtRTw" name="findSqrFtDistance" specification="_L2qrALpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3WAcbpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WAcrpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WAc7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>return Math.abs(h1.getSqrFt()-h2.getSqrFt());&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3WAdLpxEeeQjPd4LJtRTw" name="addHouse" specification="_L2rSELpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3WAdbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WAdrpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WAd7pxEeeQjPd4LJtRTw" name="sf" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WAeLpxEeeQjPd4LJtRTw" name="p">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>houses.add(new House(c, a, sf, p));&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3WAebpxEeeQjPd4LJtRTw" name="setNewHouse" specification="_L2r5ILpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3WAerpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WngLpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L3WngbpxEeeQjPd4LJtRTw" name="sf" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <language>java</language>
        <body>newHouse= new House(c, a,sf);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3WngrpxEeeQjPd4LJtRTw" name="resetNN" specification="_L0038LpxEeeQjPd4LJtRTw">
        <language>java</language>
        <body>nearestNeighbors.clear();&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3Wng7pxEeeQjPd4LJtRTw" name="setNewHousePrice" specification="_L0038bpxEeeQjPd4LJtRTw">
        <language>java</language>
        <body>newHouse.setPrice(findPrice());&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L0v_cLpxEeeQjPd4LJtRTw" name="KNN" method="_L3ULQLpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L0v_cbpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L0wmgLpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L0wmgbpxEeeQjPd4LJtRTw" type="_L0uxULpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L0xNkLpxEeeQjPd4LJtRTw" name="findPrice" method="_L3UyVLpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq1LpxEeeQjPd4LJtRTw">
          <body>*findPrice(List&lt;House> NN)&#xD;
	*@Parameters&#xD;
	*-list of houses -> nearest neighbors determined by findKNN method&#xD;
	*&#xD;
	*@returns&#xD;
	*-returns price of new house -> simply calculated by averaging nearest neighbors for the purposes of milestone 1&#xD;
	*</body>
        </ownedComment>
        <ownedParameter xmi:id="_L0x0oLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L0038LpxEeeQjPd4LJtRTw" name="resetNN" method="_L3WngrpxEeeQjPd4LJtRTw"/>
      <ownedOperation xmi:id="_L0038bpxEeeQjPd4LJtRTw" name="setNewHousePrice" method="_L3Wng7pxEeeQjPd4LJtRTw"/>
      <ownedOperation xmi:id="_L2oOwLpxEeeQjPd4LJtRTw" name="findDistance" method="_L3UyVrpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq1bpxEeeQjPd4LJtRTw">
          <body>*findDistance (House h1, House h2)&#xD;
	*@param&#xD;
	*	-two houses that are being compared&#xD;
	*@return&#xD;
	*	-return a float representing the distance between the two houses&#xD;
	*	&#xD;
	*Determine distance between two houses&#xD;
	*	//index 0 of arraylist has coordinates&#xD;
		//index 1, Age&#xD;
		//index 2, sqrFt &#xD;
		//index 3, price</body>
        </ownedComment>
        <ownedParameter xmi:id="_L2oOwbpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2oOwrpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2oOw7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2o10LpxEeeQjPd4LJtRTw" name="findCoordinateDistance" method="_L3VZYLpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq1rpxEeeQjPd4LJtRTw">
          <body>*findCoordinateDistance(House h1, House h2)&#xD;
	*@param&#xD;
	*	-two houses that are being compared&#xD;
	*@return&#xD;
	*	-returns a float representing the euclidean distance between the two houses which are being compared&#xD;
	*	&#xD;
	*Determine the euclidean distance between two houses&#xD;
	*	using  dist(h1(x, y), h2(a, b)) = sqrt((x - a)� + (y - b)�)</body>
        </ownedComment>
        <ownedParameter xmi:id="_L2o10bpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2o10rpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2pc4LpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2pc4bpxEeeQjPd4LJtRTw" name="findAgeDistance" method="_L3VZZLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L2qD8LpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2qD8bpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2qD8rpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2qrALpxEeeQjPd4LJtRTw" name="findSqrFtDistance" method="_L3WAcLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L2qrAbpxEeeQjPd4LJtRTw" name="h1" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2qrArpxEeeQjPd4LJtRTw" name="h2" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2qrA7pxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2rSELpxEeeQjPd4LJtRTw" name="addHouse" method="_L3WAdLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L2rSEbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2rSErpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2rSE7pxEeeQjPd4LJtRTw" name="sf" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2rSFLpxEeeQjPd4LJtRTw" name="p">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L2r5ILpxEeeQjPd4LJtRTw" name="setNewHouse" method="_L3WAebpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L2r5IbpxEeeQjPd4LJtRTw" name="c" type="_L0aoQLpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2sgMLpxEeeQjPd4LJtRTw" name="a" type="_L0Ml0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L2sgMbpxEeeQjPd4LJtRTw" name="sf" type="_L0-B4LpxEeeQjPd4LJtRTw"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L22RMLpxEeeQjPd4LJtRTw" name="findKNN" method="_L3UyULpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3Zq07pxEeeQjPd4LJtRTw">
          <body>*findKNN&#xD;
	*@param &#xD;
	*-an integer k representing the number of neighbors looked at to determine price of new house&#xD;
	*-an object of type House, called newHouse which will be compared against other houses&#xD;
	*&#xD;
	*1. Reset list of nearestNeighbors right before function call*smelly needs fixing&#xD;
	*2. Iterate through the collection of houses and append the one with shortest distance to the new house&#xD;
	*3.	Repeat the process on the same collection less the appended house&#xD;
	*4. Repeat k times&#xD;
	*</body>
        </ownedComment>
        <ownedParameter xmi:id="_L22RMbpxEeeQjPd4LJtRTw" name="k">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L22RMrpxEeeQjPd4LJtRTw" name="newHouse" type="_L0gH0LpxEeeQjPd4LJtRTw"/>
        <ownedParameter xmi:id="_L22RM7pxEeeQjPd4LJtRTw" name="potentialNN" type="_L2cokLpxEeeQjPd4LJtRTw"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L0-B4LpxEeeQjPd4LJtRTw" name="SqrFt">
      <ownedComment xmi:id="_L3aR4LpxEeeQjPd4LJtRTw">
        <body>*SqrFt
 *
 *@Authors: Arsalan Sadiq 
 *@Purpose: An attribute of a house which takes in an integer and using that it gets a normalized value which is under a certain limit
 *
 *@field variables
 *	squareFeet: An integer value of squarefeet
 *	
 *@methods
 *	main:
 *	getNrmalizedValue: returns a float value which is under 0-1 depending on the squareFeet of an house.
 *</body>
      </ownedComment>
      <ownedAttribute xmi:id="_L3DskLpxEeeQjPd4LJtRTw" name="squareFeet" visibility="private">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3XOkLpxEeeQjPd4LJtRTw" name="SqrFt" specification="_L0_QALpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3XOkbpxEeeQjPd4LJtRTw" name="squareFeet">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L3XOkrpxEeeQjPd4LJtRTw" type="_L0-B4LpxEeeQjPd4LJtRTw" direction="return"/>
        <language>java</language>
        <body>// initialise instance variables
		this.squareFeet=squareFeet;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3XOk7pxEeeQjPd4LJtRTw" name="getSqrFt" specification="_L1BFMLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3XOlLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <language>java</language>
        <body>return squareFeet;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3X1oLpxEeeQjPd4LJtRTw" name="getNormalizedValue" specification="_L1BsQbpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3X1obpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
        <language>java</language>
        <body>float value = this.squareFeet;

		return (float) (value / (10000));

		//if(this.squareFeet>2000 || this.squareFeet==2000){
		//value = (float) 2.0;
		//}else if(this.squareFeet>1000 || this.squareFeet&lt;2000){
		//value = (float) 1.5;
		//}else{
		//value = (float) 1.0;
		//}
		//return value;

	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L0_QALpxEeeQjPd4LJtRTw" name="SqrFt" method="_L3XOkLpxEeeQjPd4LJtRTw">
        <eAnnotations xmi:id="_L1AeILpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L1AeIbpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedComment xmi:id="_L3aR4bpxEeeQjPd4LJtRTw">
          <body>Constructor for objects of class SquareFeet</body>
        </ownedComment>
        <ownedParameter xmi:id="_L0_QAbpxEeeQjPd4LJtRTw" name="squareFeet">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
        <ownedParameter xmi:id="_L1AeIrpxEeeQjPd4LJtRTw" type="_L0-B4LpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L1BFMLpxEeeQjPd4LJtRTw" name="getSqrFt" method="_L3XOk7pxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3aR4rpxEeeQjPd4LJtRTw">
          <body>A getter method for SqrFt that returns the value of squarefeet.
	 * @return squareFeet</body>
        </ownedComment>
        <ownedParameter xmi:id="_L1BsQLpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_L1BsQbpxEeeQjPd4LJtRTw" name="getNormalizedValue" method="_L3X1oLpxEeeQjPd4LJtRTw">
        <ownedComment xmi:id="_L3aR47pxEeeQjPd4LJtRTw">
          <body>A method that normazlizes the value of the squarefeets
	 * @return float value</body>
        </ownedComment>
        <ownedParameter xmi:id="_L1BsQrpxEeeQjPd4LJtRTw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L1C6YLpxEeeQjPd4LJtRTw" name="TestRun">
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_L3YcsLpxEeeQjPd4LJtRTw" name="main" specification="_L1FWoLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L3YcsbpxEeeQjPd4LJtRTw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L3YcsrpxEeeQjPd4LJtRTw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>KNN running = new KNN();
		running.addHouse(new Coordinates(12,25),new Age(&quot;New&quot;),new SqrFt(1200), 500000);
		running.addHouse(new Coordinates(10,50), new Age(&quot;Old&quot;),new SqrFt(1000), 300000);
		running.addHouse(new Coordinates(30,100), new Age(&quot;New&quot;), new SqrFt(800),400000);
		running.setNewHouse(new Coordinates(15, 20),  new Age(&quot;New&quot;),new SqrFt(1000));		
		running.resetNN();
		running.findKNN(1, running.getNewHouse(), running.getHouses());
		running.setNewHousePrice();
		System.out.println(&quot;Test 1&quot;);
		System.out.println(&quot;&quot;);
		System.out.println(&quot;&quot;);

		System.out.println(&quot;Training example 2: Coordinates (10, 50) Age (Old) SqrFt(1000) Price (300000)&quot;);
		System.out.println(&quot;Training example 3: Coordinates (30, 100) Age (New) SqrFt(800) Price (400000)&quot;);
		System.out.println(&quot;Training example 1: Coordinates (12, 25) Age (New) SqrFt(1200) Price (500000)&quot;);
		System.out.println(&quot;The testing example is: K = 1 Coordinates (12, 25) Age (New) SqrFt(1200)&quot;);
		System.out.println(&quot;The price of the testing example is &quot;+running.getNewHouse().getPrice());
		System.out.println(&quot;&quot;);
		System.out.println(&quot;&quot;);
		running.resetNN();
		running.findKNN(2, running.getNewHouse(), running.getHouses());
		running.setNewHousePrice();
		System.out.println(&quot;Test 2&quot;);
		System.out.println(&quot;&quot;);
		System.out.println(&quot;&quot;);
		System.out.println(&quot;Training example 1: Coordinates (12, 25) Age (New) SqrFt(1200) Price (500000)&quot;);
		System.out.println(&quot;Training example 2: Coordinates (10, 50) Age (Old) SqrFt(1000) Price (300000)&quot;);
		System.out.println(&quot;Training example 3: Coordinates (30, 100) Age (New) SqrFt(800) Price (400000)&quot;);
		System.out.println(&quot;The testing example is: K = 2 Coordinates (12, 25) Age (New) SqrFt(1200)&quot;);
		System.out.println(&quot;The price of the testing example is &quot;+running.getNewHouse().getPrice());
		System.out.println(&quot;Number of NN = &quot; + running.getNearestNeighbors().size());
		System.out.println(&quot;&quot;);
		running.resetNN();
		running.findKNN(3, running.getNewHouse(), running.getHouses());
		running.setNewHousePrice();
		System.out.println(&quot;Test 3&quot;);
		System.out.println(&quot;&quot;);
		System.out.println(&quot;&quot;);
		System.out.println(&quot;Training example 1: Coordinates (12, 25) Age (New) SqrFt(1200) Price (500000)&quot;);
		System.out.println(&quot;Training example 2: Coordinates (10, 50) Age (Old) SqrFt(1000) Price (300000)&quot;);
		System.out.println(&quot;Training example 3: Coordinates (30, 100) Age (New) SqrFt(800) Price (400000)&quot;);
		System.out.println(&quot;The testing example is: K = 3 Coordinates (12, 25) Age (New) SqrFt(1200)&quot;);
		System.out.println(&quot;The price of the testing example is &quot;+running.getNewHouse().getPrice());
		System.out.println(&quot;Number of NN = &quot; + running.getNearestNeighbors().size());
		System.out.println(&quot;&quot;);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_L1DhcLpxEeeQjPd4LJtRTw" name="TestRun">
        <eAnnotations xmi:id="_L1EIgLpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_L1EIgbpxEeeQjPd4LJtRTw" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_L1EvkLpxEeeQjPd4LJtRTw" type="_L1C6YLpxEeeQjPd4LJtRTw" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_L1FWoLpxEeeQjPd4LJtRTw" name="main" isStatic="true" method="_L3YcsLpxEeeQjPd4LJtRTw">
        <ownedParameter xmi:id="_L1FWobpxEeeQjPd4LJtRTw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_L1F9sLpxEeeQjPd4LJtRTw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_L3dVMLpxEeeQjPd4LJtRTw" name="" memberEnd="_L3dVMbpxEeeQjPd4LJtRTw _L2-NALpxEeeQjPd4LJtRTw">
      <ownedEnd xmi:id="_L3dVMbpxEeeQjPd4LJtRTw" name="" type="_L0gH0LpxEeeQjPd4LJtRTw" association="_L3dVMLpxEeeQjPd4LJtRTw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_L3ejUbpxEeeQjPd4LJtRTw" name="" memberEnd="_L3ejUrpxEeeQjPd4LJtRTw _L3ACMLpxEeeQjPd4LJtRTw">
      <ownedEnd xmi:id="_L3ejUrpxEeeQjPd4LJtRTw" name="" type="_L0uxULpxEeeQjPd4LJtRTw" association="_L3ejUbpxEeeQjPd4LJtRTw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_L3fKYbpxEeeQjPd4LJtRTw" name="" memberEnd="_L3fKYrpxEeeQjPd4LJtRTw _L3CecbpxEeeQjPd4LJtRTw">
      <ownedEnd xmi:id="_L3fKYrpxEeeQjPd4LJtRTw" name="" type="_L0uxULpxEeeQjPd4LJtRTw" association="_L3fKYbpxEeeQjPd4LJtRTw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_L3gYgbpxEeeQjPd4LJtRTw" name="" memberEnd="_L3gYgrpxEeeQjPd4LJtRTw _L3DFgLpxEeeQjPd4LJtRTw">
      <ownedEnd xmi:id="_L3gYgrpxEeeQjPd4LJtRTw" name="" type="_L0uxULpxEeeQjPd4LJtRTw" association="_L3gYgbpxEeeQjPd4LJtRTw"/>
    </packagedElement>
    <profileApplication xmi:id="_Li3lQLpxEeeQjPd4LJtRTw">
      <eAnnotations xmi:id="_Li7PoLpxEeeQjPd4LJtRTw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_LjAvMLpxEeeQjPd4LJtRTw" base_Package="_LcWtkLpxEeeQjPd4LJtRTw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L1EIgrpxEeeQjPd4LJtRTw" base_Element="_L1DhcLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Array xmi:id="_L1F9sbpxEeeQjPd4LJtRTw" base_Element="_L1FWobpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L2d2sLpxEeeQjPd4LJtRTw" base_Element="_L2cokLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L2gS8LpxEeeQjPd4LJtRTw" base_Element="_L2edwLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L20cALpxEeeQjPd4LJtRTw" base_Element="_L2zN4bpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Generics xmi:id="_L23fULpxEeeQjPd4LJtRTw" genericsValue="House" base_Element="_L22RM7pxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L27JsLpxEeeQjPd4LJtRTw" base_Element="_L26ioLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L28X0LpxEeeQjPd4LJtRTw" base_Element="_L27wwLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L28-4bpxEeeQjPd4LJtRTw" base_Element="_L28X0bpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L2-0EbpxEeeQjPd4LJtRTw" base_Element="_L2-NALpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L3ACMbpxEeeQjPd4LJtRTw" base_Element="_L3ACMLpxEeeQjPd4LJtRTw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_L3BQULpxEeeQjPd4LJtRTw" name="getHouses" method="_L3TkMLpxEeeQjPd4LJtRTw">
      <ownedParameter xmi:id="_L3CecLpxEeeQjPd4LJtRTw" type="_L2cokLpxEeeQjPd4LJtRTw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_L3B3YLpxEeeQjPd4LJtRTw" genericsValue="House" base_Element="_L3BQULpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_L3EToLpxEeeQjPd4LJtRTw" base_Element="_L3DskLpxEeeQjPd4LJtRTw"/>
  <uml:OpaqueBehavior xmi:id="_L3TkMLpxEeeQjPd4LJtRTw" name="getHouses" specification="_L3BQULpxEeeQjPd4LJtRTw">
    <ownedParameter xmi:id="_L3TkMbpxEeeQjPd4LJtRTw" type="_L2cokLpxEeeQjPd4LJtRTw" direction="return"/>
    <language>java</language>
    <body>return (ArrayList&lt;House>) houses;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_L3ejULpxEeeQjPd4LJtRTw" base_Element="_L3dVMLpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L3fKYLpxEeeQjPd4LJtRTw" base_Element="_L3ejUbpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L3gYgLpxEeeQjPd4LJtRTw" base_Element="_L3fKYbpxEeeQjPd4LJtRTw"/>
  <UMLLabProfile:Reference xmi:id="_L3hmoLpxEeeQjPd4LJtRTw" base_Element="_L3gYgbpxEeeQjPd4LJtRTw"/>
</xmi:XMI>
